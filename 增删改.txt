mongodb 操作


database   collection1   document1  document2

  
	   collection2  document1  document2


数据库  集合   文档

常用命令

1.db.help() 
查看命令提示 


2.db 
查看当前所在数据库的名字 


3.use命令 
use+数据库名 表示切换或是创建数据库。和Mysql中use的唯一不同点，就是当数据库不存在的时候，MongoDB中的use可以创建数据库。 


4.show dbs 
显示数据库，需要注意的是show dbs，只会显示有数据的库，没有数据的库，是不会显示的。下图中，dqs数据库中，开始没有数据，所以不会显示，当我插入一条数据库后，show dbs 就会显示它。


5.db.dropDatabase() 
删除当前数据。 
删除之前 


6.db.stats() 
查看当前数据的状态 


7.db.version() 
查看mongoDB版本 


8.db.getMongo() 
查看当前连接机器的ip 


9.mongoDB对支持JavaScript 
因为mongoDB支持JavaScript，所以可以直接在命令提示中输入js代码。



创建集合
db.createCollections('test1')

显示全部集合 

show tables  或者 show collections



创建集合的时候插入数据

db.class.insert({‘classid’:1,’className’:”三年二班”}); 



删除集合 

db.collectioName.drop()

向集合里插入数据

db.student.insert({"stu_id":1,"stu_name":"张三","age":6,"class_id":1});
插入的时候可以
var docArr=[{"stu_id":2,"stu_name":"李四"},{"stu_id":3,"stu_name":"王五","class_id":1},{"stu_id":4,"stu_name":"赵六",age:10,"hobby":"football"}];

db.student.insert(docArr);

显示集合数据
db.student.find()


删除数据

db.collectionName.remove(where,[justOne]); 
where 代表删除条件，当where为{}代表删除所有文档。 
justOne 默认情况下为false，代表匹配条件的文档有多个的时候，删除所有的匹配文档。如果设置为true或1（设置其他非0的整数也可以），代表仅仅删除一个文档。 
实例 
1.删除school数据库student集合里名字(stu_name)为赵六的文档。

db.student.remove({"stu_name":"赵六"});


数据修改


db.collectionName.update(query,update,upset,multi); 
collectionName：集合名字 
query： 修改的条件，类似SQL的where语句。 
update ：更新命令，类似SQL的set语句。 
upset ：可选，默认是false，如果未发现符合更新条件的数据内容，是否执行插入操作，1或者true代表进行插入 0或者false不进行插入。 
multi ：可选，mongodb 默认是false。是否进行多行更新。1或者true进行多行更新 0或者false不进行多行更新。 
关于update 格式有两种形式 
1.直接赋值使用{set:{}}  
如{set:{“name”:”张三”}}，将名字改为张三 

2.进行算术运算使用{inc:{}}  
如{inc:{“age”:3}}，将age增加3 
如{$inc:{“age”:-3}}，将age减3 

实例 
1.更新学生编号(stu_id)为2文档，为其添加一个字段年龄(age)为13

db.student.update({"stu_id":2},{$set:{"age":13}});
